name: NPM Publish
on:
  push:
    branches:
      - main
jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      isPublish: ${{ steps.is-publish.outputs.isPublish }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 22
      - run: yarn
      - run: yarn build
      - id: previous-version
        run: |
          PACKAGE_NAME=$(node -p "require('./dist/package.json').name")
          PREVIOUS_VERSION=$(npm view $PACKAGE_NAME version || echo "0.0.0")
          echo "previousVersion=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
      - id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./dist/package.json').version")
          echo "currentVersion=$CURRENT_VERSION" >> $GITHUB_OUTPUT
      - id: is-publish
        run: |
          if [ "${{ steps.previous-version.outputs.previousVersion }}" != "${{ steps.current-version.outputs.currentVersion }}" ]; then
            echo "isPublish=true" >> $GITHUB_OUTPUT
          else
            echo "isPublish=false" >> $GITHUB_OUTPUT
          fi
      - uses: JS-DevTools/npm-publish@v1
        with:
          package: ./dist/package.json
          token: ${{ secrets.NPM_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: dist-package
          path: dist/package.json
  notify:
    runs-on: ubuntu-latest
    needs: publish
    if: needs.publish.outputs.isPublish == 'true'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - uses: actions/download-artifact@v4
        with:
          name: dist-package
          path: dist/
      - id: version
        run: |
          VERSION=$(node -p "require('./dist/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}
          DATE=$(grep "\[$VERSION\]" CHANGELOG.md | head -n 1 | sed -E 's/.*\(([0-9]{4}-[0-9]{2}-[0-9]{2})\).*/\1/')
          CHANGELOG="${VERSION}-${DATE}"
          CHANGELOG=$(echo "$CHANGELOG" | sed 's/\.//g' | sed -E 's/[ \t]+/-/g')
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
      - run: |
          VERSION=${{ steps.version.outputs.version }}
          CHANGELOG=${{ steps.changelog.outputs.changelog }}
          curl -X POST -H 'Content-Type: application/json' \
            -d "{
              \"channel\": \"steroids-nest\",
              \"text\": \"#newVersion\n${{ github.repository }} ${VERSION}\n[Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md#${CHANGELOG})\"
            }" ${{ secrets.MATTERMOST_WEBHOOK_URL }}
